<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Hyde</title>
 <link href="http://andhyde.com/atom.xml" rel="self"/>
 <link href="http://andhyde.com/"/>
 <updated>2014-02-22T11:13:14+01:00</updated>
 <id>http://andhyde.com</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Overzicht les 1</title>
   <link href="http://andhyde.com/2014/02/05/overzicht-les-1/"/>
   <updated>2014-02-05T00:00:00+01:00</updated>
   <id>http://andhyde.com/2014/02/05/overzicht-les-1</id>
   <content type="html">&lt;p&gt;Hoi iedereen,&lt;/p&gt;

&lt;p&gt;Bedankt voor de interesse gisteren! Wij kijken uit naar volgende week. Hier een overzicht van de eerste les:&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;voor_thuis&quot;&gt;Voor thuis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/installatie/&quot;&gt;Installeer&lt;/a&gt; Ruby en Sublime Text.&lt;/li&gt;

&lt;li&gt;Probeer de eerste paar bladzijden van de &lt;a href=&quot;http://cli.learncodethehardway.org/book/&quot;&gt;command line crash course&lt;/a&gt;. In plaats van &lt;code&gt;cmd&lt;/code&gt; werkt dit boek met &lt;code&gt;powershell&lt;/code&gt;, maar de verschillen zijn heel klein. Bovendien hebben de computers op het Felisenum ook &lt;code&gt;powershell&lt;/code&gt; (zoals Daan terecht opmerkte.)&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://www.bloc.io/ruby-warrior/#/&quot;&gt;Ruby Warrior&lt;/a&gt;! Wie komt er langs level 4? Zie onder voor een korte uitleg. De eerste die de code voor level 4 naar ons mailt krijgt een verrassing…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extra_informatie&quot;&gt;Extra informatie&lt;/h2&gt;

&lt;h3 id=&quot;while_loop_voor_de_extra_opdracht&quot;&gt;While loop (voor de extra opdracht)&lt;/h3&gt;

&lt;p&gt;Je hebt een programma dat “Hoi meneer!” of “Hoi mevrouw” en de juiste naam zegt. Hoe kun je er voor zorgen dat het programma doorgaat tot de gebruiker het &lt;em&gt;eindelijk&lt;/em&gt; goed heeft ingevoerd? Met een &lt;a href=&quot;/hoofdstuk2/#whileloop&quot;&gt;while loop&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Net als bij een &lt;a href=&quot;/hoofdstuk1/#het_statement&quot;&gt;&lt;code&gt;if-statement&lt;/code&gt;&lt;/a&gt;, checkt een while loop een &lt;a href=&quot;/hoofdstuk2/#logische_uitspraken&quot;&gt;logische uitspraak&lt;/a&gt;. Welke logische uitspraak moeten we in dit geval checken? Wij hadden zoiets bedacht:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;false&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;while&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;false&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
    &lt;span class=&#39;c1&#39;&gt;# De code&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ergens in de while loop zul je dan &lt;code&gt;correct = true&lt;/code&gt; moeten zetten, zodat &lt;code&gt;correct == false&lt;/code&gt; niet meer waar is. Dan stopt de while loop.&lt;/p&gt;

&lt;h3 id=&quot;wat_is_&quot;&gt;Wat is &lt;code&gt;gets.chomp&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;Er staat in je programma &lt;code&gt;naam = gets&lt;/code&gt;. Jij typt &lt;code&gt;Jan&lt;/code&gt; in. Staat er in &lt;code&gt;naam&lt;/code&gt; dan de waarde &lt;code&gt;&amp;quot;Jan&amp;quot;&lt;/code&gt;? Nee! De enter, die je hebt ingetoetst om de input te beëindigen, is ook opgeslagen. &lt;code&gt;naam&lt;/code&gt; heeft de waarde &lt;code&gt;&amp;quot;Jan\n&amp;quot;&lt;/code&gt;. &lt;code&gt;&amp;quot;\n&amp;quot;&lt;/code&gt; is een speciaal karakter dat een &lt;em&gt;newline&lt;/em&gt; (nieuwe regel) aangeeft — een enter dus.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;chomp&lt;/code&gt; haalt de newline aan het eind van een string weg. Lees &lt;a href=&quot;http://www.ruby-doc.org/core-1.9.3/String.html#method-i-chomp&quot;&gt;hier&lt;/a&gt; de officiële uitleg.&lt;/p&gt;

&lt;h3 id=&quot;wat_doet_&quot;&gt;Wat doet &lt;code&gt;&amp;quot;Hallo, #{naam}&amp;quot;&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;Hiermee zet je de waarde van &lt;code&gt;naam&lt;/code&gt; op de juiste plek in de string. Je kunt daarna weer verder typen: &lt;code&gt;&amp;quot;Wat is #{naam} een mooie naam!&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Dit is niet de enige manier om strings aan elkaar te maken. Met &lt;code&gt;+&lt;/code&gt; lukt het ook:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;naam&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Jan&amp;quot;&lt;/span&gt;
&lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Wat is &amp;quot;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;naam&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot; een mooie naam!&amp;quot;&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;# =&amp;gt; Wat is Jan een mooie naam!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maar de eerste methode is in dit geval handiger.&lt;/p&gt;

&lt;h3 id=&quot;_of_en__en&quot;&gt;|| (OF) en &amp;amp;&amp;amp; (EN)&lt;/h3&gt;

&lt;p&gt;Als je wilt checken of &lt;code&gt;geslacht&lt;/code&gt; de waarde &lt;code&gt;&amp;quot;vrouw&amp;quot;&lt;/code&gt; of de waarde &lt;code&gt;&amp;quot;meisje&amp;quot;&lt;/code&gt; bevat, moet je de OF-operator gebruiken. Dat gaat zo:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;geslacht&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;vrouw&amp;quot;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;||&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;geslacht&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;meisje&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Hallo mevrouw &lt;/span&gt;&lt;span class=&#39;si&#39;&gt;#{&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;naam&lt;/span&gt;&lt;span class=&#39;si&#39;&gt;}&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;!&amp;quot;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wat nou als je wilt kijken of de leeftijd groter is dan &lt;code&gt;10&lt;/code&gt;, maar kleiner dan &lt;code&gt;20&lt;/code&gt;? Dan gebruik je de EN-operator:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;leeftijd&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;10&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;leeftijd&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;20&lt;/span&gt;
    &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Een tiener.&amp;quot;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;_niet_gelijk_aan&quot;&gt;&lt;code&gt;!=&lt;/code&gt; (niet gelijk aan)&lt;/h3&gt;

&lt;p&gt;Met &lt;code&gt;!=&lt;/code&gt; eis je dat twee dingen &lt;em&gt;niet&lt;/em&gt; gelijk aan elkaar zijn.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;mi&#39;&gt;5&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!=&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;10&lt;/span&gt;             &lt;span class=&#39;c1&#39;&gt;# =&amp;gt; true&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;Piet&amp;quot;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Jan&amp;quot;&lt;/span&gt;     &lt;span class=&#39;c1&#39;&gt;# =&amp;gt; true&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;Jan&amp;quot;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Jan&amp;quot;&lt;/span&gt;      &lt;span class=&#39;c1&#39;&gt;# =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;error_messages&quot;&gt;Error messages&lt;/h3&gt;

&lt;p&gt;Ruby klaagt luidkeels als je een typfout maakt. All hope is not lost. Wat gebeurt hier?&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;c1&#39;&gt;# test.rb&lt;/span&gt;
&lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;false&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Je bedoelde &lt;code&gt;correct = false&lt;/code&gt;, maar je gebruikte &lt;code&gt;==&lt;/code&gt;. Je vraagt Ruby de waarde van &lt;code&gt;correct&lt;/code&gt; te checken, terwijl &lt;code&gt;correct&lt;/code&gt; nog niet bestaat! Je krijgt nu:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test.rb:2:in `&amp;lt;main&amp;gt;&amp;#39;: undefined local variable or method `correct&amp;#39;
for main:Object (NameError)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wat staat hier in godsnaam?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;test.rb:2&lt;/code&gt;: Ruby zegt dat het in regel 2 van bestand &lt;code&gt;test.rb&lt;/code&gt; is fout is gegaan. Het is een goed idee om daar een kijkje te nemen!&lt;/li&gt;

&lt;li&gt;&lt;code&gt;undefined local variable or method &amp;#39;correct&amp;#39;&lt;/code&gt;: Ruby zegt dat &lt;code&gt;correct&lt;/code&gt; niet gedefinieerd is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Genoeg informatie om je fout snel te herstellen. Nog een voorbeeld:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;false&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;while&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;false&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;do&lt;/span&gt;
    &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Ben je een jongen, of een meisje?&amp;quot;&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;geslacht&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;gets&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;chomp&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;geslacht&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;jongen&amp;quot;&lt;/span&gt;
        &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Hallo, meneer&amp;quot;&lt;/span&gt;
        &lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;true&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;elsif&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;geslacht&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;meisje&amp;quot;&lt;/span&gt;
        &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Hallo, mevrouw&amp;quot;&lt;/span&gt;
        &lt;span class=&#39;n&#39;&gt;correct&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;true&lt;/span&gt;
    &lt;span class=&#39;k&#39;&gt;else&lt;/span&gt;
        &lt;span class=&#39;nb&#39;&gt;puts&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Ik begrijp het niet, probeer het nog eens.&amp;quot;&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nu is de foutboodschap:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;test.rb:13: syntax error, unexpected end-of-input, expecting keyword_end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Het regelnummer is 13 (de laatste regel). Daar heb je niet zoveel aan. Maar de boodschap is duidelijker: &lt;code&gt;unexpected end-of-input, expecting keyword_end&lt;/code&gt;. We zijn een &lt;code&gt;end&lt;/code&gt; vergeten! Zien jullie waar?&lt;/p&gt;

&lt;p&gt;Elk apart codeblok moet je laten inspringen met Tab. Alles in de while loop hoort bij elkaar. Dit krijgt één Tab. Alles in de if-statements krijgt nóg een Tab. Nu is het makkelijk onthouden: elke Tab die je inspringt, moet je afsluiten met een &lt;code&gt;end&lt;/code&gt;. We zijn hier twee Tabs ingesprongen, maar we hebben maar één &lt;code&gt;end&lt;/code&gt;. Je ziet meteen dat het niet klopt.&lt;/p&gt;

&lt;h3 id=&quot;ruby_warrior&quot;&gt;Ruby Warrior&lt;/h3&gt;

&lt;p&gt;Speel &lt;a href=&quot;https://www.bloc.io/ruby-warrior/#/&quot;&gt;hier&lt;/a&gt;. Er gebeuren wat dingen die jullie nog niet snappen (aan het eind van de cursus wel.) De functie &lt;code&gt;play_turn&lt;/code&gt; wordt steeds opnieuw uitgevoerd. Als je een functie gebruikt met een uitroepteken, zoals &lt;code&gt;warrior.walk!&lt;/code&gt;, dan is de beurt voorbij en begin je vooraan &lt;code&gt;play_turn&lt;/code&gt;. Dus je kunt maar één keer lopen, slaan of healen per beurt.&lt;/p&gt;

&lt;p&gt;In het eerste level hoef je alleen maar vooruit te lopen:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;def&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;play_turn&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;warrior&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
    &lt;span class=&#39;n&#39;&gt;warrior&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;walk!&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Links in beeld voor staan alle functies uitgelegd. Succes!&lt;/p&gt;</content>
 </entry>
 

</feed>
