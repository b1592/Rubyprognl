// Generated by CoffeeScript 1.7.1
(function() {
  var Lesson, Question, RubyHandler;

  Question = require("./question");

  Lesson = require("./lesson");

  RubyHandler = require("./ruby_handler");

  describe("RubyHandler", function() {
    var MOCK_STDOUT, lesson, mockEngine, mockOutput, outputHandlers, question, questionParams, rubyHandler;
    MOCK_STDOUT = mockEngine = mockOutput = rubyHandler = lesson = questionParams = question = outputHandlers = null;
    beforeEach(function() {
      MOCK_STDOUT = "";
      mockEngine = {
        initialize: function() {},
        "eval": function() {
          return "bytecode";
        },
        stringify: function() {
          return "ruby output";
        }
      };
      mockOutput = function(string) {
        return MOCK_STDOUT += string;
      };
      questionParams = {
        description: "Typ eens x = 1.",
        answer: /x\s*=\s*1/,
        possible_errors: {
          wrong_value: /x\s*=\s*\d/
        },
        error_messages: {
          wrong_value: "Je hebt de verkeerde waarde toegewezen.",
          "default": "Dat is niet goed. Typte je x = 1?"
        }
      };
      question = new Question(questionParams);
      lesson = new Lesson([question]);
      outputHandlers = {
        output: mockOutput,
        result: mockOutput,
        error: mockOutput,
        lesson: mockOutput
      };
      return rubyHandler = new RubyHandler(outputHandlers, mockEngine, lesson);
    });
    return it("outputs the lesson description immediately", function() {
      return expect(MOCK_STDOUT).toEqual("Typ eens x = 1.");
    });
  });

}).call(this);
