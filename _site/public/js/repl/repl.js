// Generated by CoffeeScript 1.7.1
(function() {
  
window.jqconsole = $('#console').jqconsole("DO YOU WANT TO PLAY A GAME?\n", '> ');

jqconsole.RegisterShortcut('Z', function() {
  jqconsole.AbortPrompt();
  handler();
});

// Move to line start Ctrl+A.
jqconsole.RegisterShortcut('A', function() {
  jqconsole.MoveToStart();
  handler();
});

// Move to line end Ctrl+E.
jqconsole.RegisterShortcut('E', function() {
  jqconsole.MoveToEnd();
  handler();
});

jqconsole.RegisterMatching('{', '}', 'brace');
jqconsole.RegisterMatching('(', ')', 'paran');
jqconsole.RegisterMatching('[', ']', 'bracket');
;
  var jqcons, loadRest, that;

  that = this;

  jqcons = "";

  loadRest = function() {
    var engine, error, output, promptHandler, result, rubyHandler, startPrompt;
    console.log("Hallo vanuit de focus");
    console.log(this);
    jqconsole.Write("done.\n");
    output = function(string) {
      jqconsole.Write("" + string, "repl-output");
      return void 0;
    };
    error = function(string) {
      jqconsole.Write("" + string, "repl-error");
      return void 0;
    };
    result = function(string) {
      jqconsole.Write(" => " + string + "\n", "repl-result");
      return void 0;
    };
    engine = Ruby;
    console.log(engine);
    rubyHandler = new RubyHandler(output, result, error, engine);
    promptHandler = function(input) {
      rubyHandler.Eval(input);
      return startPrompt();
    };
    startPrompt = function() {
      return jqconsole.Prompt(true, promptHandler);
    };
    return startPrompt();
  };

  $(".jqconsole").click(function() {
    if (typeof Ruby === "undefined" || Ruby === null) {
      jqconsole.Write("Loading...");
      return jQuery.ajax({
        url: "/public/js/repl/ruby.closure.js",
        dataType: 'script',
        success: loadRest,
        cache: true
      });
    }
  });

}).call(this);
